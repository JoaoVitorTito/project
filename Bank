index.js

import {Cliente} from "./Cliente.js" 
import {ContaCorrente} from "./ContaCorrente.js"

//atributo new utilizado para instanciar um novo cliente
const cliente1 = new Cliente("Ricardo", 1122233309);
const cliente2 = new Cliente("Alice", 45648465464);
let numeroDeContas = 0;
 //cliente1 agora vira uma variavel de acesso 

const contaCorrenteRicardo = new ContaCorrente(1001, cliente1);
contaCorrenteRicardo.depositar(500);

const conta2 = new ContaCorrente(102, cliente2);

let valor = 200;
contaCorrenteRicardo.transferir(valor, conta2);

console.log(ContaCorrente.numeroDeContas);



// para iniciar um modulo de projeto js, usasse o comando npm init no terminal

Cliente.js


//classe para retirar repetições desnecessarias no codigo
export class Cliente{
    
    nome;
    _cpf;

    get cpf(){

        return this._cpf;
    }
    constructor(nome, cpf) {
        this.nome = nome;
        this._cpf = cpf;

    }
    
    }
    
    ContaCorrente.js
    
    
import {Cliente} from "./Cliente.js";

export class ContaCorrente{
    static numeroDeContas = 0;
    agencia;
    _cliente;

    _saldo = 0;
    set cliente(novoValor){
        if(novoValor instanceof Cliente){

            this._cliente = novoValor;
        }
    }

    get cliente(){
        return this._cliente;
    }

    constructor(agencia, cliente) {
    this.agencia = agencia;
    this.cliente = cliente;
    ContaCorrente.numeroDeContas += 1;

    }
    //Quando esta dentro de uma classe se chama atributo





    //Métodos Ex. Sacar
   
   
   
    sacar(valor){
        if(this._saldo >= valor){
            this._saldo -= valor;
            return valor;
            }

    }

    depositar(valor){
        if(valor >0){
            return;
        }
        this._saldo+= valor;
    }

    transferir(valor, conta){
        const valorSacado = this.sacar(valor);
        conta.depositar(valorSacado);

    }

}
